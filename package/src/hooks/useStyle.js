"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.useTLTheme = void 0;
var React = require("react");
var styles = new Map();
function makeCssTheme(prefix, theme) {
    return Object.keys(theme).reduce(function (acc, key) {
        var value = theme[key];
        if (value) {
            return acc + ("--" + prefix + "-" + key + ": " + value + ";\n");
        }
        return acc;
    }, '');
}
function useTheme(prefix, theme, selector) {
    if (selector === void 0) { selector = ':root'; }
    React.useLayoutEffect(function () {
        var style = document.createElement('style');
        var cssTheme = makeCssTheme(prefix, theme);
        style.setAttribute('id', prefix + "-theme");
        style.setAttribute('data-selector', selector);
        style.innerHTML = "\n        " + selector + " {\n          " + cssTheme + "\n        }\n      ";
        document.head.appendChild(style);
        return function () {
            if (style && document.head.contains(style)) {
                document.head.removeChild(style);
            }
        };
    }, [prefix, theme, selector]);
}
function useStyle(uid, rules) {
    React.useLayoutEffect(function () {
        if (styles.get(uid)) {
            return function () { return void null; };
        }
        var style = document.createElement('style');
        style.innerHTML = rules;
        style.setAttribute('id', uid);
        document.head.appendChild(style);
        styles.set(uid, style);
        return function () {
            if (style && document.head.contains(style)) {
                document.head.removeChild(style);
                styles["delete"](uid);
            }
        };
    }, [uid, rules]);
}
var css = function (strings) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    return strings.reduce(function (acc, string, index) { return acc + string + (index < args.length ? args[index] : ''); }, '');
};
var defaultTheme = {
    accent: 'rgb(255, 0, 0)',
    brushFill: 'rgba(0,0,0,.05)',
    brushStroke: 'rgba(0,0,0,.25)',
    selectStroke: 'rgb(66, 133, 244)',
    selectFill: 'rgba(65, 132, 244, 0.05)',
    background: 'rgb(248, 249, 250)',
    foreground: 'rgb(51, 51, 51)'
};
var tlcss = css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  @font-face {\n    font-family: 'Recursive';\n    font-style: normal;\n    font-weight: 500;\n    font-display: swap;\n    src: url(https://fonts.gstatic.com/s/recursive/v23/8vI-7wMr0mhh-RQChyHEH06TlXhq_gukbYrFMk1QuAIcyEwG_X-dpEfaE5YaERmK-CImKsvxvU-MXGX2fSqasNfUlTGZnI14ZeY.woff2)\n      format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC,\n      U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n  }\n\n  @font-face {\n    font-family: 'Recursive';\n    font-style: normal;\n    font-weight: 700;\n    font-display: swap;\n    src: url(https://fonts.gstatic.com/s/recursive/v23/8vI-7wMr0mhh-RQChyHEH06TlXhq_gukbYrFMk1QuAIcyEwG_X-dpEfaE5YaERmK-CImKsvxvU-MXGX2fSqasNfUlTGZnI14ZeY.woff2)\n      format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC,\n      U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n  }\n\n  @font-face {\n    font-family: 'Recursive Mono';\n    font-style: normal;\n    font-weight: 420;\n    font-display: swap;\n    src: url(https://fonts.gstatic.com/s/recursive/v23/8vI-7wMr0mhh-RQChyHEH06TlXhq_gukbYrFMk1QuAIcyEwG_X-dpEfaE5YaERmK-CImqvTxvU-MXGX2fSqasNfUlTGZnI14ZeY.woff2)\n      format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC,\n      U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n  }\n\n  .tl-container {\n    --tl-zoom: 1;\n    --tl-scale: calc(1 / var(--tl-zoom));\n    --tl-padding: calc(64px * max(1, var(--tl-scale)));\n    position: relative;\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    height: 100%;\n    max-width: 100%;\n    max-height: 100%;\n    box-sizing: border-box;\n    padding: 0px;\n    margin: 0px;\n    z-index: 100;\n    overflow: hidden;\n    touch-action: none;\n    overscroll-behavior: none;\n    background-color: var(--tl-background);\n  }\n\n  .tl-container * {\n    box-sizing: border-box;\n  }\n\n  .tl-overlay {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    touch-action: none;\n    pointer-events: none;\n  }\n\n  .tl-snap-line {\n    stroke: var(--tl-accent);\n    stroke-width: calc(1px * var(--tl-scale));\n  }\n\n  .tl-snap-point {\n    stroke: var(--tl-accent);\n    stroke-width: calc(1px * var(--tl-scale));\n  }\n\n  .tl-canvas {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    touch-action: none;\n    pointer-events: all;\n    overflow: clip;\n  }\n\n  .tl-layer {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    height: 0px;\n    width: 0px;\n    contain: layout style size;\n  }\n\n  .tl-absolute {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    transform-origin: center center;\n    contain: layout style size;\n  }\n\n  .tl-positioned {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    transform-origin: center center;\n    pointer-events: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    contain: layout style size;\n  }\n\n  .tl-positioned-svg {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    contain: layout style size;\n  }\n\n  .tl-positioned-div {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    padding: var(--tl-padding);\n    overflow: hidden;\n    contain: layout style size;\n  }\n\n  .tl-counter-scaled {\n    transform: scale(var(--tl-scale));\n  }\n\n  .tl-dashed {\n    stroke-dasharray: calc(2px * var(--tl-scale)), calc(2px * var(--tl-scale));\n  }\n\n  .tl-transparent {\n    fill: transparent;\n    stroke: transparent;\n  }\n\n  .tl-cursor-ns {\n    cursor: ns-resize;\n  }\n\n  .tl-cursor-ew {\n    cursor: ew-resize;\n  }\n\n  .tl-cursor-nesw {\n    cursor: nesw-resize;\n  }\n\n  .tl-cursor-nwse {\n    cursor: nwse-resize;\n  }\n\n  .tl-corner-handle {\n    stroke: var(--tl-selectStroke);\n    fill: var(--tl-background);\n    stroke-width: calc(1.5px * var(--tl-scale));\n  }\n\n  .tl-rotate-handle {\n    stroke: var(--tl-selectStroke);\n    fill: var(--tl-background);\n    stroke-width: calc(1.5px * var(--tl-scale));\n    cursor: grab;\n  }\n\n  .tl-binding {\n    fill: var(--tl-selectFill);\n    stroke: var(--tl-selectStroke);\n    stroke-width: calc(1px * var(--tl-scale));\n    pointer-events: none;\n  }\n\n  .tl-user {\n    left: -4px;\n    top: -4px;\n    height: 8px;\n    width: 8px;\n    border-radius: 100%;\n    pointer-events: none;\n  }\n\n  .tl-indicator {\n    fill: transparent;\n    stroke-width: calc(1.5px * var(--tl-scale));\n    pointer-events: none;\n  }\n\n  .tl-user-indicator-bounds {\n    border-style: solid;\n    border-width: calc(1px * var(--tl-scale));\n  }\n\n  .tl-selected {\n    stroke: var(--tl-selectStroke);\n  }\n\n  .tl-hovered {\n    stroke: var(--tl-selectStroke);\n  }\n\n  .tl-clone-target {\n    pointer-events: all;\n  }\n\n  .tl-clone-target:hover .tl-clone-button {\n    opacity: 1;\n  }\n\n  .tl-clone-button-target {\n    cursor: pointer;\n    pointer-events: all;\n  }\n\n  .tl-clone-button-target:hover .tl-clone-button {\n    fill: var(--tl-selectStroke);\n  }\n\n  .tl-clone-button {\n    opacity: 0;\n    r: calc(8px * var(--tl-scale));\n    stroke-width: calc(1.5px * var(--tl-scale));\n    stroke: var(--tl-selectStroke);\n    fill: var(--tl-background);\n  }\n\n  .tl-bounds {\n    pointer-events: none;\n    contain: layout style size;\n  }\n\n  .tl-bounds-bg {\n    stroke: none;\n    fill: var(--tl-selectFill);\n    pointer-events: all;\n    contain: layout style size;\n  }\n\n  .tl-bounds-center {\n    fill: transparent;\n    stroke: var(--tl-selectStroke);\n    stroke-width: calc(1.5px * var(--tl-scale));\n  }\n\n  .tl-brush {\n    fill: var(--tl-brushFill);\n    stroke: var(--tl-brushStroke);\n    stroke-width: calc(1px * var(--tl-scale));\n    pointer-events: none;\n    contain: layout style size;\n  }\n\n  .tl-dot {\n    fill: var(--tl-background);\n    stroke: var(--tl-foreground);\n    stroke-width: 2px;\n  }\n\n  .tl-handle {\n    pointer-events: all;\n  }\n\n  .tl-handle:hover .tl-handle-bg {\n    fill: var(--tl-selectFill);\n  }\n\n  .tl-handle:hover .tl-handle-bg > * {\n    stroke: var(--tl-selectFill);\n  }\n\n  .tl-handle:active .tl-handle-bg {\n    fill: var(--tl-selectFill);\n  }\n\n  .tl-handle:active .tl-handle-bg > * {\n    stroke: var(--tl-selectFill);\n  }\n\n  .tl-handle {\n    fill: var(--tl-background);\n    stroke: var(--tl-selectStroke);\n    stroke-width: 1.5px;\n  }\n\n  .tl-handle-bg {\n    fill: transparent;\n    stroke: none;\n    pointer-events: all;\n    r: calc(16px / max(1, var(--tl-zoom)));\n  }\n\n  .tl-binding-indicator {\n    stroke-width: calc(3px * var(--tl-scale));\n    fill: var(--tl-selectFill);\n    stroke: var(--tl-selected);\n  }\n\n  .tl-centered-g {\n    transform: translate(var(--tl-padding), var(--tl-padding));\n  }\n\n  .tl-current-parent > *[data-shy='true'] {\n    opacity: 1;\n  }\n\n  .tl-binding {\n    fill: none;\n    stroke: var(--tl-selectStroke);\n    stroke-width: calc(2px * var(--tl-scale));\n  }\n"], ["\n  @font-face {\n    font-family: 'Recursive';\n    font-style: normal;\n    font-weight: 500;\n    font-display: swap;\n    src: url(https://fonts.gstatic.com/s/recursive/v23/8vI-7wMr0mhh-RQChyHEH06TlXhq_gukbYrFMk1QuAIcyEwG_X-dpEfaE5YaERmK-CImKsvxvU-MXGX2fSqasNfUlTGZnI14ZeY.woff2)\n      format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC,\n      U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n  }\n\n  @font-face {\n    font-family: 'Recursive';\n    font-style: normal;\n    font-weight: 700;\n    font-display: swap;\n    src: url(https://fonts.gstatic.com/s/recursive/v23/8vI-7wMr0mhh-RQChyHEH06TlXhq_gukbYrFMk1QuAIcyEwG_X-dpEfaE5YaERmK-CImKsvxvU-MXGX2fSqasNfUlTGZnI14ZeY.woff2)\n      format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC,\n      U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n  }\n\n  @font-face {\n    font-family: 'Recursive Mono';\n    font-style: normal;\n    font-weight: 420;\n    font-display: swap;\n    src: url(https://fonts.gstatic.com/s/recursive/v23/8vI-7wMr0mhh-RQChyHEH06TlXhq_gukbYrFMk1QuAIcyEwG_X-dpEfaE5YaERmK-CImqvTxvU-MXGX2fSqasNfUlTGZnI14ZeY.woff2)\n      format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC,\n      U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n  }\n\n  .tl-container {\n    --tl-zoom: 1;\n    --tl-scale: calc(1 / var(--tl-zoom));\n    --tl-padding: calc(64px * max(1, var(--tl-scale)));\n    position: relative;\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    height: 100%;\n    max-width: 100%;\n    max-height: 100%;\n    box-sizing: border-box;\n    padding: 0px;\n    margin: 0px;\n    z-index: 100;\n    overflow: hidden;\n    touch-action: none;\n    overscroll-behavior: none;\n    background-color: var(--tl-background);\n  }\n\n  .tl-container * {\n    box-sizing: border-box;\n  }\n\n  .tl-overlay {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    touch-action: none;\n    pointer-events: none;\n  }\n\n  .tl-snap-line {\n    stroke: var(--tl-accent);\n    stroke-width: calc(1px * var(--tl-scale));\n  }\n\n  .tl-snap-point {\n    stroke: var(--tl-accent);\n    stroke-width: calc(1px * var(--tl-scale));\n  }\n\n  .tl-canvas {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    touch-action: none;\n    pointer-events: all;\n    overflow: clip;\n  }\n\n  .tl-layer {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    height: 0px;\n    width: 0px;\n    contain: layout style size;\n  }\n\n  .tl-absolute {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    transform-origin: center center;\n    contain: layout style size;\n  }\n\n  .tl-positioned {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    transform-origin: center center;\n    pointer-events: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    contain: layout style size;\n  }\n\n  .tl-positioned-svg {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    contain: layout style size;\n  }\n\n  .tl-positioned-div {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    padding: var(--tl-padding);\n    overflow: hidden;\n    contain: layout style size;\n  }\n\n  .tl-counter-scaled {\n    transform: scale(var(--tl-scale));\n  }\n\n  .tl-dashed {\n    stroke-dasharray: calc(2px * var(--tl-scale)), calc(2px * var(--tl-scale));\n  }\n\n  .tl-transparent {\n    fill: transparent;\n    stroke: transparent;\n  }\n\n  .tl-cursor-ns {\n    cursor: ns-resize;\n  }\n\n  .tl-cursor-ew {\n    cursor: ew-resize;\n  }\n\n  .tl-cursor-nesw {\n    cursor: nesw-resize;\n  }\n\n  .tl-cursor-nwse {\n    cursor: nwse-resize;\n  }\n\n  .tl-corner-handle {\n    stroke: var(--tl-selectStroke);\n    fill: var(--tl-background);\n    stroke-width: calc(1.5px * var(--tl-scale));\n  }\n\n  .tl-rotate-handle {\n    stroke: var(--tl-selectStroke);\n    fill: var(--tl-background);\n    stroke-width: calc(1.5px * var(--tl-scale));\n    cursor: grab;\n  }\n\n  .tl-binding {\n    fill: var(--tl-selectFill);\n    stroke: var(--tl-selectStroke);\n    stroke-width: calc(1px * var(--tl-scale));\n    pointer-events: none;\n  }\n\n  .tl-user {\n    left: -4px;\n    top: -4px;\n    height: 8px;\n    width: 8px;\n    border-radius: 100%;\n    pointer-events: none;\n  }\n\n  .tl-indicator {\n    fill: transparent;\n    stroke-width: calc(1.5px * var(--tl-scale));\n    pointer-events: none;\n  }\n\n  .tl-user-indicator-bounds {\n    border-style: solid;\n    border-width: calc(1px * var(--tl-scale));\n  }\n\n  .tl-selected {\n    stroke: var(--tl-selectStroke);\n  }\n\n  .tl-hovered {\n    stroke: var(--tl-selectStroke);\n  }\n\n  .tl-clone-target {\n    pointer-events: all;\n  }\n\n  .tl-clone-target:hover .tl-clone-button {\n    opacity: 1;\n  }\n\n  .tl-clone-button-target {\n    cursor: pointer;\n    pointer-events: all;\n  }\n\n  .tl-clone-button-target:hover .tl-clone-button {\n    fill: var(--tl-selectStroke);\n  }\n\n  .tl-clone-button {\n    opacity: 0;\n    r: calc(8px * var(--tl-scale));\n    stroke-width: calc(1.5px * var(--tl-scale));\n    stroke: var(--tl-selectStroke);\n    fill: var(--tl-background);\n  }\n\n  .tl-bounds {\n    pointer-events: none;\n    contain: layout style size;\n  }\n\n  .tl-bounds-bg {\n    stroke: none;\n    fill: var(--tl-selectFill);\n    pointer-events: all;\n    contain: layout style size;\n  }\n\n  .tl-bounds-center {\n    fill: transparent;\n    stroke: var(--tl-selectStroke);\n    stroke-width: calc(1.5px * var(--tl-scale));\n  }\n\n  .tl-brush {\n    fill: var(--tl-brushFill);\n    stroke: var(--tl-brushStroke);\n    stroke-width: calc(1px * var(--tl-scale));\n    pointer-events: none;\n    contain: layout style size;\n  }\n\n  .tl-dot {\n    fill: var(--tl-background);\n    stroke: var(--tl-foreground);\n    stroke-width: 2px;\n  }\n\n  .tl-handle {\n    pointer-events: all;\n  }\n\n  .tl-handle:hover .tl-handle-bg {\n    fill: var(--tl-selectFill);\n  }\n\n  .tl-handle:hover .tl-handle-bg > * {\n    stroke: var(--tl-selectFill);\n  }\n\n  .tl-handle:active .tl-handle-bg {\n    fill: var(--tl-selectFill);\n  }\n\n  .tl-handle:active .tl-handle-bg > * {\n    stroke: var(--tl-selectFill);\n  }\n\n  .tl-handle {\n    fill: var(--tl-background);\n    stroke: var(--tl-selectStroke);\n    stroke-width: 1.5px;\n  }\n\n  .tl-handle-bg {\n    fill: transparent;\n    stroke: none;\n    pointer-events: all;\n    r: calc(16px / max(1, var(--tl-zoom)));\n  }\n\n  .tl-binding-indicator {\n    stroke-width: calc(3px * var(--tl-scale));\n    fill: var(--tl-selectFill);\n    stroke: var(--tl-selected);\n  }\n\n  .tl-centered-g {\n    transform: translate(var(--tl-padding), var(--tl-padding));\n  }\n\n  .tl-current-parent > *[data-shy='true'] {\n    opacity: 1;\n  }\n\n  .tl-binding {\n    fill: none;\n    stroke: var(--tl-selectStroke);\n    stroke-width: calc(2px * var(--tl-scale));\n  }\n"])));
function useTLTheme(theme, selector) {
    var tltheme = React.useMemo(function () { return (__assign(__assign({}, defaultTheme), theme)); }, [theme]);
    useTheme('tl', tltheme, selector);
    useStyle('tl-canvas', tlcss);
}
exports.useTLTheme = useTLTheme;
var templateObject_1;
